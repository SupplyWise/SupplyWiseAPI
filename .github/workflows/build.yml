name: SonarCloud

on:
  push:
    branches:
      - main
      - dev
      - SUP-*
  pull_request:
    types: [opened, synchronize, reopened]

defaults:
  run:
    working-directory: ./supplywise

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: supplywiseuser
          POSTGRES_PASSWORD: supplywisepassword
          POSTGRES_DB: supplywise
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U supplywiseuser"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Set up Docker Compose
        run: docker-compose up -d # Bring up PostgreSQL and Spring Boot containers

      - name: Wait for Database to be ready
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          while ! docker exec postgres-supplywise pg_isready -U supplywiseuser; do
            sleep 2
          done
          echo "PostgreSQL is ready!"

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed for PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
              -Dsonar.projectKey=SupplyWise_SupplyWiseAPI
